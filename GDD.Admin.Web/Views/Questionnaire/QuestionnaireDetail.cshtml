@using GDD.Admin.VO
@{
    Layout = "";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>layui</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    @Styles.Render("~/bootstrap/css")
    @Styles.Render("~/LayUI/layuicss")
    <!-- 注意：如果你直接复制所有代码到本地，上述css路径需要改成你本地的 -->
    <style>
        /*无方框风格*/
        .layui-breadcrumb {
            visibility: visible;
        }

        /*.layui-form-label {
            width: 120px;
        }

        .layui-input-block {
            margin-left: 120px;
        }*/

        /*方框风格
        /*label {
            margin-bottom:0px;
        }

        .layui-form-pane .layui-form-label {
            width: 140px;
        }
        .layui-form-pane .layui-input-block {
            margin-left: 140px;
        }*/


        .layui-form-pane .minValue {
           margin-left: 130px;
        }

        .layui-form-pane .layui-form-label {
           width:fit-content;
           min-width:110px;
        }
        .layui-form-pane {
            margin-top:2rem;
        }
    </style>
</head>
<body>
    @{
        var obj = ViewData["QuestionnaireData"] as QuestionnaireVO;
        
    <div class="layui-breadcrumb" lay-separator="-">
        <a href="#" onclick="backPage();">返回列表</a>
    </div>
    <form class="layui-form layui-form-pane" action=""  id="form">
        <input type="hidden" name="QuestionnaireID" value="@obj.QuestionnaireID">
        <input type="hidden" name="QWName" id="QWName" value="@obj.QWName">
        <input type="hidden" name="QuestionnaireTypeName" id="QuestionnaireTypeName" value="@obj.QuestionnaireTypeName">
        <div class="layui-form-item">
            <label class="layui-form-label">类型</label>
            <div class="layui-input-block">
                <select name="QuestionnaireTypeID" id="selectQuestionnaireType"  lay-verify="required" lay-filter="selectQuestionnaireType" lay-search="">
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">题库</label>
            <div class="layui-input-block">
                <select name="QuestionWarehouseID" id="selectQuestionWarehouse"  lay-verify="required" lay-filter="selectQuestionWarehouse" lay-search=""></select>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">名称</label>
            <div class="layui-input-block">
                <input type="text" name="QuestionnaireName" lay-verify="required" autocomplete="off" placeholder="请输入名称" class="layui-input" value="@obj.QuestionnaireName">
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">版本</label>
            <div class="layui-input-block">
                <input type="text" name="Version" lay-verify="required" placeholder="请输入版本" autocomplete="off" class="layui-input" value="@obj.Version">
            </div>
        </div>
        <div class="layui-form-item">
            <div layui-input-inline>
                <label class="layui-form-label">低于多少分必填</label>
                <div class="layui-input-block minValue">
                    <input type="text" name="LowestScore" lay-verify="required|number" placeholder="请输入最低分值" autocomplete="off" class="layui-input inline" value="@obj.LowestScore">
                </div>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">是否关联人员</label>
            <div class="layui-input-block">
                @if((obj.IsRelation == "不关联" ?  false : true)){
                <input type="checkbox" checked="" name="IsRelation" lay-skin="switch" lay-filter="switchTest" lay-text="是|否">
                } else {
                <input type="checkbox" name="IsRelation" lay-skin="switch" lay-filter="switchTest" lay-text="是|否">
                }
                
            </div>
        </div>
        
        <div class="layui-form-item layui-form-text">
            <label class="layui-form-label">描述</label>
            <div class="layui-input-block">
                <textarea placeholder="请输入描述"  name="Describe" class="layui-textarea">@obj.Describe</textarea>
            </div>
        </div>
        <div class="layui-form-item">
            <div class="layui-inline">
                <label class="layui-form-label">开始时间</label>
                <div class="layui-input-inline">
                    <input type="text" name="StartTime" id="StartDate" lay-verify="date" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input" value="@obj.StartTime">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">结束时间</label>
                <div class="layui-input-inline">
                    <input type="text" name="EndTime" id="EndDate" lay-verify="date" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input" value="@obj.EndTime">
                </div>
            </div>
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label">状态</label>
            <div class="layui-input-block">
                <select name="State" lay-filter="aihao" lay-verify="required">
                    <option value=""  selected="@(obj.State == "" ? true : false)"></option>
                    <option value="0" selected="@(obj.State == "未发布" ? true : false)">未发布</option>
                    <option value="1" selected="@(obj.State == "调查中" ? true : false)">调查中</option>
                    <option value="2" selected="@(obj.State == "调查完成" ? true : false)">调查完成</option>
                </select>
            </div>
        </div>
        <div class="layui-form-item">
            <input class="layui-btn" lay-submit="" lay-filter="form" value="立即提交" />
            <input type="reset" class="layui-btn layui-btn-primary" value="重置" />
        </div>
    </form>
    }
    @Scripts.Render("~/all/js")
    <script>

        

        layui.use(['form', 'layedit', 'laydate'], function () {
            var form = layui.form
            , layer = layui.layer
            , layedit = layui.layedit
            , laydate = layui.laydate;
            var guidTemp = "00000000-0000-0000-0000-000000000000";
            //日期
            laydate.render({
                elem: '#StartDate'
            });
            laydate.render({
                elem: '#EndDate'
            });

            form.verify({
                //数组的两个值分别代表：[正则匹配、匹配不符时的提示文字]
                digital: [
                    /^[0-9]*$/
                    ,'请输入数字类型'
                ]
            });

            //监听指定开关
            form.on('switch(switchTest)', function (data) {
                layer.tips('温馨提示：已开启关联人员信息', data.othis)
            });

            $.ajax({
                dataType: 'JSON',
                type: "Get",
                url: "/QuestionnaireType/List?name=&pageSize=10&pageIndex=1",
                success: function (data) {
                    var select = false;
                    $('#selectQuestionnaireType').append(new Option("请选择", ""))
                    $.each(data.data, function (index, item) {
                        if ($("#QuestionnaireTypeName").val() == item.QuestionnaireTypeName) {
                            select = true;
                        }
                        else {
                            select = false;
                        }
                        $('#selectQuestionnaireType').append(new Option(item.QuestionnaireTypeName, item.QuestionnaireTypeID, select, select));//往下拉菜单里添加元素
                    })
                    form.render('select');
                    BindQuestionWarehouse();
                }
            });

            //监听提交
            form.on('submit(form)', function (data) {
                console.log(data.field);
                
                var starttime = $('#StartDate').val();
                var endtime = $('#EndDate').val();
                var start = new Date(starttime.replace("-", "/").replace("-", "/"));
                var end = new Date(endtime.replace("-", "/").replace("-", "/"));
                if (end < start) {
                    layer.alert("时间区域：开始时间不能大于结束时间", {
                        title: '温馨提示'
                    })
                    return false;
                }
                
                data.field.IsRelation = data.field.IsRelation == "on" ? 1 : 0;
                //QuestionnaireID为空，新增操作
                if (data.field.QuestionnaireID == "" || data.field.QuestionnaireID == null) {
                    $.ajax({
                        dataType: 'JSON',
                        type: "post",
                        url: "/Questionnaire/Add",
                        data: data.field,
                        success: function (data) {
                            layer.alert(data.msg, {
                                title: '新增数据提示'
                            })
                            $('form')[0].reset();
                            layui.form.render();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                        }
                    })
                    return;
                }
                //QuestionnaireID不为空，修改操作
                $.ajax({
                    dataType: 'JSON',
                    type: "post",
                    url: "/Questionnaire/Edit",
                    data: data.field,
                    success: function (data) {
                        layer.alert(data.msg, {
                            title: '编辑数据提示'
                        })
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                })
                
            });

            form.on('select(selectQuestionnaireType)', function (data) {
                //if (data.value == 0) {
                //    $("#selectQuestionnaireType").empty();
                //    $('#selectQuestionnaireType').append(new Option('请选择', ""));//往下拉菜单里添加元素
                //    form.render('select');
                //    return;
                //}
                BindQuestionWarehouse();
            });

            function BindQuestionWarehouse() {
                var qtid = $("#selectQuestionnaireType").val();
                if (qtid == "") {
                    qtid = guidTemp;
                }
                $.ajax({
                    dataType: 'JSON',
                    type: "Get",
                    url: "/QuestionWarehouse/AllList?questionnaireTypeId=" + qtid,
                    success: function (data) {
                        var select = false;
                        $("#selectQuestionWarehouse").empty();
                        $('#selectQuestionWarehouse').append(new Option('请选择', ""));
                        $.each(data.data, function (index, item) {
                            if ($("#QWName").val() == item.QWName) {
                                select = true;
                            }
                            else {
                                select = false;
                            }
                            $('#selectQuestionWarehouse').append(new Option(item.QWName, item.QuestionWarehouseID, select, select));
                        })
                        form.render('select');
                    }
                });
            }

            //表单初始赋值
            form.val('example', {
                "username": "贤心" // "name": "value"
              , "password": "123456"
              , "interest": 1
              , "like[write]": true //复选框选中状态
              , "close": true //开关状态
              , "sex": "女"
              , "desc": "我爱 layui"
            })
        });

       

        function backPage() {
            history.back();
        }
    </script>

</body>
</html>